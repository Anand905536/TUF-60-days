class Solution {
    public int singleNonDuplicate(int[] nums) {
        
       int n=nums.length;
        if(n==1) return nums[0];
        if(nums[0]!=nums[1]) return nums[0];
        if(nums[n-2]!=nums[n-1]) return nums[n-1];
        
        int ans=0;
        int low=0;
        int high=n-1;
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1])
            {
                ans=nums[mid];
                break;
            }
         else if(nums[mid]==nums[mid-1])
            {
                int len2=mid-low+1;
                if(len2%2==0) {
                    low=mid+1;
                }
                else{
                    high=mid-2; 
                }
            }
            else if(nums[mid]==nums[mid+1])
            {
                int len1=high-mid+1;
                if(len1%2==0)
                {
                    high=mid-1;
                }
                else {
                   low=mid+2;  
                }
            }
          
        }
        return ans;
    }
}
